# Generated by Django 2.1.7 on 2019-03-12 11:03

import datetime
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
from django.utils.timezone import utc
import django_extensions.db.fields


class Migration(migrations.Migration):

    dependencies = [
        ('movie_recommendation', '0003_delete_asdf'),
    ]

    operations = [
        migrations.CreateModel(
            name='PersonalMovie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.FloatField(default=None)),
                ('created_at', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.AddField(
            model_name='actor',
            name='created_at',
            field=django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='customer',
            name='created_at',
            field=django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, default=datetime.datetime(2019, 3, 12, 11, 3, 3, 307303, tzinfo=utc)),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='movie',
            name='rate',
            field=models.FloatField(default=None),
        ),
        migrations.AddField(
            model_name='personalmovie',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movie_recommendation.Customer'),
        ),
        migrations.AddField(
            model_name='personalmovie',
            name='movie',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movie_recommendation.Movie'),
        ),
        migrations.AddField(
            model_name='customer',
            name='movies',
            field=models.ManyToManyField(through='movie_recommendation.PersonalMovie', to='movie_recommendation.Movie'),
        ),
    ]
